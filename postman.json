{
	"info": {
		"_postman_id": "4b751e4e-7784-4f0e-9423-66f79da9557b",
		"name": "Ensembl REST",
		"description": "Ensembl REST API provides language agnostic bindings to Ensembl data.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Archive",
			"item": [
				{
					"name": "GET archive/id/:id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://rest.ensembl.org/archive/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"archive",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Uses the given identifier to return its latest version\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000157764  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname |"
					},
					"response": []
				},
				{
					"name": "POST archive/id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": [\n        \"ENSG00000157764\",\n        \"ENSG00000248378\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/archive/id",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"archive",
								"id"
							]
						},
						"description": "Retrieve the latest version for a set of identifiers\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n\n## Message\n\n| Content-type | Format | Example |\n| --- | --- | --- |\n| application/json | { \"id\" : array } | { \"id\" : \\[\"ENSG00000157764\", \"ENSG00000248378\"\\] } |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Comparative Genomics",
			"item": [
				{
					"name": "GET cafe/genetree/id/:id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/cafe/genetree/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"cafe",
								"genetree",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSGT00390000003602"
								}
							]
						},
						"description": "Retrieves a cafe tree of the gene tree using the gene tree stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl genetree ID | \\- | ENSGT00390000003602 |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| nh_format | String | The format of a NH (New Hampshire) request. Available only with the default setting to allow us to return the cafe tree with Taxa names appended with number of members and the p_value. example : homo_sapiens_3_0.123 where 3 is the number of members and 0.123 is the p value | Preset with default cafe parameters | \\- |"
					},
					"response": []
				},
				{
					"name": "GET cafe/genetree/member/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/cafe/genetree/member/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"cafe",
								"genetree",
								"member",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000167664"
								}
							]
						},
						"description": "Retrieves the cafe tree of the gene tree that contains the gene / transcript / translation stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000167664  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| nh_format |  | The format of a NH (New Hampshire) request. Available only with the default setting to allow us to return the cafe tree with Taxa names appended with number of members and the p_value. example : homo_sapiens_3_0.123 where 3 is the number of members and 0.123 is the p value | Preset with default cafe parameters | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				},
				{
					"name": "GET cafe/genetree/member/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/cafe/genetree/member/symbol/:species/:symbol?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"cafe",
								"genetree",
								"member",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Retrieves the cafe tree of the gene tree that contains the gene identified by a symbol\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| nh_format |  | The format of a NH (New Hampshire) request. Available only with the default setting to allow us to return the cafe tree with Taxa names appended with number of members and the p_value. example : homo_sapiens_3_0.123 where 3 is the number of members and 0.123 is the p value | Preset with default cafe parameters | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript |"
					},
					"response": []
				},
				{
					"name": "GET family/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/family/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"family",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "PTHR23264"
								}
							]
						},
						"description": "Retrieves a family information using the family stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl family ID | \\- | PTHR23264  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions). Note: If aligned=1, this will override sequence=none | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| member_source | Enum(all, ensembl, uniprot) | The source of the family members that you want returned | all | \\- |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned. Note: dependant on the setting for \"aligned\", If aligned=1, this will override sequence=none | protein | \\- |"
					},
					"response": []
				},
				{
					"name": "GET family/member/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/family/member/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"family",
								"member",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000167664"
								}
							]
						},
						"description": "Retrieves the information for all the families that contains the gene / transcript / translation stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000167664  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions). Note: If aligned=1, this will override sequence=none | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| member_source | Enum(all, ensembl, uniprot) | The source of the family members that you want returned | all | \\- |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned. Note: dependant on the setting for \"aligned\", If aligned=1, this will override sequence=none | protein | \\- |"
					},
					"response": []
				},
				{
					"name": "GET family/member/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/family/member/symbol/:species/:symbol?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"family",
								"member",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Retrieves the information for all the families that contains the gene identified by a symbol\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions). Note: If aligned=1, this will override sequence=none | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| member_source | Enum(all, ensembl, uniprot) | The source of the family members that you want returned | all | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned. Note: dependant on the setting for \"aligned\", If aligned=1, this will override sequence=none | protein | \\- |"
					},
					"response": []
				},
				{
					"name": "GET genetree/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/genetree/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"genetree",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSGT00390000003602"
								}
							]
						},
						"description": "Retrieves a gene tree for a gene tree stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl genetree ID | \\- | ENSGT00390000003602  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| cigar_line | Boolean | Return the aligned sequence encoded in CIGAR format | 0 | \\- |\n| clusterset_id | String | Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected | \\- | default  <br>murinae  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| nh_format | Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip) | The format of a NH (New Hampshire) request. | simple | \\- |\n| prune_species | String | Prune the tree by species. Supports all species aliases. Will return a tree with only the species given | \\- | human  <br>cow  <br> |\n| prune_taxon | Integer | Prune the tree by taxon. Will return a tree with only the taxons given | \\- | 9606  <br>10090  <br> |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned | protein | \\- |"
					},
					"response": []
				},
				{
					"name": "GET genetree/member/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/genetree/member/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"genetree",
								"member",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000167664"
								}
							]
						},
						"description": "Retrieves the gene tree that contains the gene / transcript / translation stable identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000167664  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| cigar_line | Boolean | Return the aligned sequence encoded in CIGAR format | 0 | \\- |\n| clusterset_id | String | Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected | \\- | default  <br>murinae  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| nh_format | Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip) | The format of a NH (New Hampshire) request. | simple | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| prune_species | String | Prune the tree by species. Supports all species aliases. Will return a tree with only the species given | \\- | human  <br>cow  <br> |\n| prune_taxon | Integer | Prune the tree by taxon. Will return a tree with only the taxons given | \\- | 9606  <br>10090  <br> |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned | protein | \\- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				},
				{
					"name": "GET genetree/member/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/genetree/member/symbol/:species/:symbol?prune_taxon=9526&prune_species=cow&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"genetree",
								"member",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "prune_taxon",
									"value": "9526"
								},
								{
									"key": "prune_species",
									"value": "cow"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Retrieves the gene tree that contains the gene identified by a symbol\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| cigar_line | Boolean | Return the aligned sequence encoded in CIGAR format | 0 | \\- |\n| clusterset_id | String | Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected | \\- | default  <br>murinae  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| nh_format | Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip) | The format of a NH (New Hampshire) request. | simple | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| prune_species | String | Prune the tree by species. Supports all species aliases. Will return a tree with only the species given | \\- | human  <br>cow  <br> |\n| prune_taxon | Integer | Prune the tree by taxon. Will return a tree with only the taxons given | \\- | 9606  <br>10090  <br> |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned | protein | \\- |"
					},
					"response": []
				},
				{
					"name": "GET alignment/region/:species/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/alignment/region/:species/:region?species_set_group=sauropsids&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"alignment",
								"region",
								":species",
								":region"
							],
							"query": [
								{
									"key": "species_set_group",
									"value": "sauropsids"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "taeniopygia_guttata"
								},
								{
									"key": "region",
									"value": "3:106040329-106040379"
								}
							]
						},
						"description": "Retrieves genomic alignments as separate blocks based on a region and species\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| region | String | Query region. A maximum of 10Mb is allowed to be requested at any one time | \\- | X:1000000..1000100:1  <br>X:1000000..1000100:-1  <br>X:1000000..1000100  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compact | Boolean | Applicable to EPO_EXTENDED alignments. If true, concatenate the extended species sequences together to create a single sequence. Otherwise, separates out all sequences. | 1 | \\- |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| display_species_set | String | Subset of species in the alignment to be displayed (multiple values). All the species in the alignment will be displayed if this is not set. Any valid alias may be used. | \\- | human  <br>chimp  <br>gorilla  <br> |\n| mask | Enum(hard,soft) | Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. | \\- | hard  <br> |\n| method | Enum(EPO, EPO_EXTENDED, PECAN, LASTZ_NET, BLASTZ_NET, TRANSLATED_BLAT_NET, CACTUS_HAL, CACTUS_HAL_PW) | The alignment method | EPO | PECAN  <br> |\n| species_set | String | The set of species used to define the pairwise alignment (multiple values). Should not be used with the species_set_group parameter. Use [/info/compara/species_sets/:method](https://rest.ensembl.org/documentation/info/compara_species_sets) with one of the methods listed above to obtain a valid list of species sets. Any valid alias may be used. | \\- | homo_sapiens  <br>mus_musculus  <br> |\n| species_set_group | String | The species set group name of the multiple alignment. Should not be used with the species_set parameter. Use [/info/compara/species_sets/:method](https://rest.ensembl.org/documentation/info/compara_species_sets) with one of the methods listed above to obtain a valid list of group names. | mammals | mammals, amniotes, fish, sauropsids, murinae |"
					},
					"response": []
				},
				{
					"name": "GET homology/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/homology/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"homology",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Retrieves homology information (orthologs) by Ensembl gene id\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000157764  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| cigar_line | Boolean | Return the aligned sequence encoded in CIGAR format | 1 | \\- |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| format | Enum(full, condensed) | Layout of the response | full | \\- |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned | protein | \\- |\n| target_species | String | Filter by species. Supports all species aliases | \\- | human  <br>cow  <br> |\n| target_taxon | Integer | Filter by taxon | \\- | 9606  <br>10090  <br> |\n| type | Enum(orthologues, paralogues, projections, all) | The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service | all | \\- |"
					},
					"response": []
				},
				{
					"name": "GET homology/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/homology/symbol/:species/:symbol?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"homology",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Retrieves homology information (orthologs) by symbol\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned | Boolean | Return the aligned string if true. Otherwise, return the original sequence (no insertions) | 1 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| cigar_line | Boolean | Return the aligned sequence encoded in CIGAR format | 1 | \\- |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| format | Enum(full,condensed) | Layout of the response | full | \\- |\n| sequence | Enum(none, cdna, protein) | The type of sequence to bring back. Setting it to none results in no sequence being returned | protein | \\- |\n| target_species | String | Filter by species. Supports all species aliases | \\- | homo_sapiens  <br>human  <br> |\n| target_taxon | Integer | Filter by taxon | \\- | 9606  <br>10090  <br> |\n| type | Enum(orthologues, paralogues, projections, all) | The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service | all | \\- |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Cross References",
			"item": [
				{
					"name": "GET xrefs/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/xrefs/symbol/:species/:symbol?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"xrefs",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Looks up an external symbol and returns all Ensembl objects linked to it. This can be a display name for a gene/transcript/translation, a synonym or an externally linked reference. If a gene's transcript is linked to the supplied symbol the service will return both gene and transcript (it supports transient links).\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript |"
					},
					"response": []
				},
				{
					"name": "GET xrefs/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/xrefs/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"xrefs",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Perform lookups of Ensembl Identifiers and retrieve their external references in other databases\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl Stable ID | \\- | ENSG00000157764  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| all_levels | Boolean | Set to find all genetic features linked to the stable ID, and fetch all external references for them. Specifying this on a gene will also return values from its transcripts and translations | 0 | 1  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC  <br> |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				},
				{
					"name": "GET xrefs/name/:species/:name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/xrefs/name/:species/:name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"xrefs",
								"name",
								":species",
								":name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "name",
									"value": "BRCA2"
								}
							]
						},
						"description": "Performs a lookup based upon the primary accession or display label of an external reference and returning the information we hold about the entry\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| name | String | Symbol or display name of a gene | \\- | BRCA2  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | core | core  <br>otherfeatures  <br> |\n| external_db | String | Filter by external database | \\- | HGNC |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Information",
			"item": [
				{
					"name": "GET info/analysis/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/analysis/:species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"analysis",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "List the names of analyses involved in generating Ensembl data.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname |"
					},
					"response": []
				},
				{
					"name": "GET info/assembly/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/assembly/:species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"assembly",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "List the currently available assemblies for a species, along with toplevel sequences, chromosomes and cytogenetic bands.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| bands | Boolean(0,1) | If set to 1, include karyotype band information. Only display if band information is available | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| synonyms | Boolean(0,1) | If set to 1, include information about known synonyms. | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/assembly/:species/:region_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/assembly/:species/:region_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"assembly",
								":species",
								":region_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "region_name",
									"value": "X"
								}
							]
						},
						"description": "Returns information about the specified toplevel sequence region for the given species.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| region_name | String | The (top level) sequence region name. | \\- | X  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| bands | Boolean(0,1) | If set to 1, include karyotype band information. Only display if band information is available | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| synonyms | Boolean(0,1) | If set to 1, include information about known synonyms | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/biotypes/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/biotypes/:species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"biotypes",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "List the functional classifications of gene models that Ensembl associates with a particular species. Useful for restricting the type of genes/transcripts retrieved by other endpoints.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname |"
					},
					"response": []
				},
				{
					"name": "GET info/biotypes/groups/:group/:object_type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/biotypes/groups/:group/:object_type/?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"biotypes",
								"groups",
								":group",
								":object_type",
								""
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "group",
									"value": "coding"
								},
								{
									"key": "object_type",
									"value": "gene"
								}
							]
						},
						"description": "Without argument the list of available biotype groups is returned. With :group argument provided, list the properties of biotypes within that group. Object type (gene or transcript) can be provided for filtering.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| group | String | Biotype group | \\- | coding  <br> |\n| object_type | String | Object type (gene or transcript) | \\- | gene |"
					},
					"response": []
				},
				{
					"name": "GET info/biotypes/name/:name/:object_type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/biotypes/name/:name/:object_type?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"biotypes",
								"name",
								":name",
								":object_type"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "name",
									"value": "protein_coding"
								},
								{
									"key": "object_type",
									"value": "gene"
								}
							]
						},
						"description": "List the properties of biotypes with a given name. Object type (gene or transcript) can be provided for filtering.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| name | String | Biotype name | \\- | protein_coding  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| object_type | String | Object type (gene or transcript) | \\- | gene |"
					},
					"response": []
				},
				{
					"name": "GET info/compara/methods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/compara/methods/?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"compara",
								"methods",
								""
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "List all compara analyses available (an analysis defines the type of comparative data).\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| class | String | The class of the method to query for. Regular expression patterns are supported. | \\- | GenomicAlign  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates |"
					},
					"response": []
				},
				{
					"name": "GET info/compara/species_sets/:method",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/compara/species_sets/:method?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"compara",
								"species_sets",
								":method"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "method",
									"value": "EPO"
								}
							]
						},
						"description": "List all collections of species analysed with the specified compara method.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| method | String | Filter by compara method. Use one the methods returned by [/info/compara/methods](https://rest.ensembl.org/documentation/info/compara_methods) endpoint. | \\- | EPO  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| compara | String | Name of the compara database to use. Multiple comparas exist on a server for separate species divisions | vertebrates | vertebrates |"
					},
					"response": []
				},
				{
					"name": "GET info/comparas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/comparas?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"comparas"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Lists all available comparative genomics databases and their data release. DEPRECATED: use info/genomes/division instead.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/data/?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"data",
								""
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Shows the data releases available on this REST server. May return more than one release (unfrequent non-standard Ensembl configuration).\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/eg_version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/eg_version?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"eg_version"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Returns the Ensembl Genomes version of the databases backing this service\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname |"
					},
					"response": []
				},
				{
					"name": "GET info/external_dbs/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/external_dbs/:species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"external_dbs",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "Lists all available external sources for a species.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| feature | Enum(dna_align_feature protein_align_feature unmapped_object xref seq_region_synonym) | Only return external DB entries for a given feature. | \\- | xref  <br>dna_align_feature  <br> |\n| filter | String | Restrict external DB searches to a single source or pattern. SQL-LIKE patterns are supported. | \\- | HGNC  <br>GO%  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/divisions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/divisions?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"divisions"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Get list of all Ensembl divisions for which information is available\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname |"
					},
					"response": []
				},
				{
					"name": "GET info/genomes/:genome_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/genomes/:genome_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"genomes",
								":genome_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "genome_name",
									"value": "arabidopsis_thaliana"
								}
							]
						},
						"description": "Find information about a given genome\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| name | String | The production name of the genome. | \\- | arabidopsis_thaliana  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the information to include details of sequences. Can be very large. | NULL | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/genomes/accession/:accession",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/genomes/accession/:accession?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"genomes",
								"accession",
								":accession"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "accession",
									"value": "U00096"
								}
							]
						},
						"description": "Find information about genomes containing a specified INSDC accession\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| accession | String | INSDC sequence accession (optionally versioned) | \\- | U00096  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the information to include details of sequences. Can be very large. | NULL | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/genomes/assembly/:assembly_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/genomes/assembly/:assembly_id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"genomes",
								"assembly",
								":assembly_id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "assembly_id",
									"value": "GCA_902167145.1"
								}
							]
						},
						"description": "Find information about a genome with a specified assembly\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| assembly_id | String | INSDC assembly ID (optionally versioned) | \\- | GCA_902167145.1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the information to include details of sequences. Can be very large. | NULL | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/genomes/division/:division_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/genomes/division/:division_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"genomes",
								"division",
								":division_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "division_name",
									"value": "EnsemblPlants"
								}
							]
						},
						"description": "Find information about all genomes in a given division. May be large for Ensembl Bacteria.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| division | String | The name of the division. | \\- | EnsemblPlants  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the information to include details of sequences. Can be very large. | NULL | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/genomes/taxonomy/:taxon_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/genomes/taxonomy/:taxon_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"genomes",
								"taxonomy",
								":taxon_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "taxon_name",
									"value": "Homo sapiens"
								}
							]
						},
						"description": "Find information about all genomes beneath a given node of the taxonomy\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| taxon_name | String | Taxon name or NCBI taxonomy ID | \\- | Homo sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the information to include details of sequences. Can be very large. | NULL | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/ping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/ping?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"ping"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Checks if the service is alive.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/rest",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/rest?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"rest"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Shows the current version of the Ensembl REST API.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/software",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/software?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"software"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Shows the current version of the Ensembl API used by the REST server.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Lists all available species, their aliases, available adaptor groups and data release.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| division | String | Filter by Ensembl or Ensembl Genomes division. | EnsemblVertebrates | EnsemblVertebrates  <br> |\n| hide_strain_info | Boolean(0,1) | Show/hide strain and strain_collection info in the output | 0 | \\- |\n| strain_collection | String | Filter by strain_collection. | \\- | mouse  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/variation/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/variation/:species?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"variation",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "List the variation sources used in Ensembl for a species.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| filter | String | Restrict the variation source searches to a single source. | \\- | dbSNP  <br>ClinVar  <br>OMIM  <br>UniProt  <br>HGMD |"
					},
					"response": []
				},
				{
					"name": "GET info/variation/consequence_types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/variation/consequence_types?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"variation",
								"consequence_types"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Lists all variant consequence types.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| rank | Boolean(0,1) | Include consequence ranking | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET info/variation/populations/:species:/:population_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/variation/populations/:species/:population_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"variation",
								"populations",
								":species",
								":population_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "population_name",
									"value": "1000GENOMES:phase_3:ASW"
								}
							]
						},
						"description": "List all individuals for a population from a species\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| population_name | String | Population name | \\- | 1000GENOMES:phase_3:ASW  <br> |\n| species | String | Species name/alias | \\- | human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET info/variation/populations/:species",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/info/variation/populations/:species?content-type=application/json&filter=LD",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"info",
								"variation",
								"populations",
								":species"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "filter",
									"value": "LD"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "List all populations for a species\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| filter | String | Restrict populations returned to e.g. only populations with LD data. It is highly recommended to set a filter and to avoid loading the complete list of populations. | \\- | LD |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Linkage Disequilibrium",
			"item": [
				{
					"name": "GET ld/:species/:id/:population_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ld/:species/:id/:population_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ld",
								":species",
								":id",
								":population_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "id",
									"value": "rs1042779"
								},
								{
									"key": "population_name",
									"value": "1000GENOMES:phase_3:KHV"
								}
							]
						},
						"description": "Computes and returns LD values between the given variant and all other variants in a window centered around the given variant. The window size is set to 500 kb.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Variant id | \\- | rs56116432  <br> |\n| population_name | String | Population for which to compute LD. Use GET [/info/variation/populations/:species?filter=LD](https://rest.ensembl.org/documentation/info/variation_populations) to retrieve a list of all populations with LD data. | \\- | 1000GENOMES:phase_3:KHV  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| attribs | Boolean | Add variation attributes for the variation which is used to compute LD data with the input variation: chr, start, end, strand, consequence_type, clinical_significance | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| d_prime | Float | Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided. | 0 | 1.0  <br> |\n| r2 | Float | Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided. | 0 | 0.85  <br> |\n| window_size | Integer | Window size in kb. The maximum allowed value for the window size is 500 kb. LD is computed for the given variant and all variants that are located within the specified window. | 500 | 500 |"
					},
					"response": []
				},
				{
					"name": "GET ld/:species/pairwise/:id1/:id2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ld/:species/pairwise/:id1/:id2?content-type=application/json&population_name=1000GENOMES:phase_3:KHV",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ld",
								":species",
								"pairwise",
								":id1",
								":id2"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "population_name",
									"value": "1000GENOMES:phase_3:KHV"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "id1",
									"value": "rs6792369"
								},
								{
									"key": "id2",
									"value": "rs1042779"
								}
							]
						},
						"description": "Computes and returns LD values between the given variants.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id1 | String | Variant id1 | \\- | rs6792369  <br> |\n| id2 | String | Variant id2 | \\- | rs1042779  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| d_prime | Float | Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided. | 0 | 1.0  <br> |\n| population_name | String | Only compute LD for this population. Use GET [/info/variation/populations/:species?filter=LD](https://rest.ensembl.org/documentation/info/variation_populations) to retrieve a list of all populations with LD data. | 0 | 1000GENOMES:phase_3:KHV  <br> |\n| r2 | Float | Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided. | 0 | 0.85 |"
					},
					"response": []
				},
				{
					"name": "GET ld/:species/region/:region/:population_name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ld/:species/region/:region/:population_name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ld",
								":species",
								"region",
								":region",
								":population_name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "region",
									"value": "6:25837556..25843455"
								},
								{
									"key": "population_name",
									"value": "1000GENOMES:phase_3:KHV"
								}
							]
						},
						"description": "Computes and returns LD values between all pairs of variants in the defined region.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| population_name | String | Population for which to compute LD. Use GET [/info/variation/populations/:species?filter=LD](https://rest.ensembl.org/documentation/info/variation_populations) to retrieve a list of all populations with LD data. | \\- | 1000GENOMES:phase_3:KHV  <br> |\n| region | String | Query region. A maximum region size of 500 kb is allowed. If the query region overlaps the MHC region only a maximum region size of 10 kb is allowed. | \\- | 6:25837556..25843455  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| d_prime | Float | Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided. | 0 | 1.0  <br> |\n| r2 | Float | Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided. | 0 | 0.85 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup",
			"item": [
				{
					"name": "GET lookup/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/lookup/id/:is?content-type=application/json;expand=1",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"lookup",
								"id",
								":is"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json;expand=1"
								}
							],
							"variable": [
								{
									"key": "is",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Find the species and database for a single identifier e.g. gene, transcript, protein\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000157764  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br>otherfeatures  <br> |\n| expand | Boolean(0,1) | Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well. | 0 | \\- |\n| format | Enum(full,condensed) | Specify the formats to emit from this endpoint | full | \\- |\n| mane | Boolean(0,1) | Include MANE features. Only available if the expand option is used. | 0 | \\- |\n| phenotypes | Boolean(0,1) | Include phenotypes. Only available for gene objects. | 0 | \\- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| utr | Boolean(0,1) | Include 5' and 3' UTR features. Only available if the expand option is used. | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "POST lookup/id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"ENSG00000157764\",\n        \"ENSG00000248378\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/lookup/id",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"lookup",
								"id"
							]
						},
						"description": "Find the species and database for several identifiers. IDs that are not found are returned with no data.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br>otherfeatures  <br> |\n| expand | Boolean(0,1) | Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well. | 0 | \\- |\n| format | Enum(full,condensed) | Specify the formats to emit from this endpoint | full | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br>transcript  <br> |\n| species | String | Species name/alias. Causes problems if the species doesn't match the identifiers in the POST body. | \\- | homo_sapiens  <br>human  <br> |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"ids\": array } | { \"ids\" : \\[\"ENSG00000157764\", \"ENSG00000248378\" \\] } |"
					},
					"response": []
				},
				{
					"name": "GET lookup/symbol/:species/:symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/lookup/symbol/:species/:symbol?expand=1&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"lookup",
								"symbol",
								":species",
								":symbol"
							],
							"query": [
								{
									"key": "expand",
									"value": "1"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "symbol",
									"value": "BRCA2"
								}
							]
						},
						"description": "Find the species and database for a symbol in a linked external database\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| symbol | String | A name or symbol from an annotation source has been linked to a genetic feature | \\- | BRCA2  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well. | NULL | \\- |\n| format | Enum(full,condensed) | Specify the layout of the response | full | \\- |"
					},
					"response": []
				},
				{
					"name": "POST lookup/symbol/:species/:symbol",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"symbols\": [\n        \"BRCA2\",\n        \"BRAF\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/lookup/symbol/:species",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"lookup",
								"symbol",
								":species"
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "Find the species and database for a set of symbols in a linked external database. Unknown symbols are omitted from the response.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias for the whole batch of symbols | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| expand | Boolean(0,1) | Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well. | NULL | \\- |\n| format | Enum(full,condensed) | Specify the layout of the response | full | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"symbols\": array } | { \"symbols\" : \\[\"BRCA2\", \"BRAF\" \\] } |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Mapping",
			"item": [
				{
					"name": "GET map/cdna/:id/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/map/cdna/:id/:region?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"map",
								"cdna",
								":id",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENST00000288602"
								},
								{
									"key": "region",
									"value": "100..300"
								}
							]
						},
						"description": "Convert from cDNA coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENST00000288602  <br> |\n| region | String | Query region | \\- | 100..300  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| include_original_region | Boolean(0,1) | Include original input region (cDNA coordinates) along with the target region (genomic coordinates) mappings. | 0 | \\- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				},
				{
					"name": "GET map/cds/:id/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/map/cds/:id/:region?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"map",
								"cds",
								":id",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENST00000288602"
								},
								{
									"key": "region",
									"value": "1..1000"
								}
							]
						},
						"description": "Convert from CDS coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENST00000288602  <br> |\n| region | String | Query region | \\- | 1..1000  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| include_original_region | Boolean(0,1) | Include original input region (cds coordinates) along with the target region (genomic coordinates) mappings. | 0 | \\- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				},
				{
					"name": "GET map/:species/:asm_one/:region/:asm_two",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/map/:species/:asm_one/:region/:asm_two?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"map",
								":species",
								":asm_one",
								":region",
								":asm_two"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "asm_one",
									"value": "GRCh37"
								},
								{
									"key": "region",
									"value": "X:1000000..1000100:1"
								},
								{
									"key": "asm_two",
									"value": "GRCh38"
								}
							]
						},
						"description": "Convert the co-ordinates of one assembly to another\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| asm_one | String | Version of the input assembly | \\- | GRCh37  <br> |\n| asm_two | String | Version of the output assembly | \\- | GRCh38  <br> |\n| region | String | Query region | \\- | X:1000000..1000100:1  <br>X:1000000..1000100:-1  <br>X:1000000..1000100  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| coord_system | String | Name of the input coordinate system | chromosome | chromosome  <br> |\n| target_coord_system | String | Name of the output coordinate system | chromosome | chromosome |"
					},
					"response": []
				},
				{
					"name": "GET map/translation/:id/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/map/translation/:id/:region?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"map",
								"translation",
								":id",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSP00000288602"
								},
								{
									"key": "region",
									"value": "100..300"
								}
							]
						},
						"description": "Convert from protein (translation) coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSP00000288602  <br> |\n| region | String | Query region | \\- | 100..300  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Ontologies and Taxonomy",
			"item": [
				{
					"name": "GET ontology/ancestors/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ontology/ancestors/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ontology",
								"ancestors",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "GO:0005667"
								}
							]
						},
						"description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An ontology term identifier | \\- | GO:0005667  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| ontology | String | Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO | \\- | GO |"
					},
					"response": []
				},
				{
					"name": "GET ontology/ancestors/chart/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ontology/ancestors/chart/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ontology",
								"ancestors",
								"chart",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "GO:0005667"
								}
							]
						},
						"description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An ontology term identifier | \\- | GO:0005667  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| ontology | String | Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO | \\- | GO |"
					},
					"response": []
				},
				{
					"name": "GET ontology/descendants/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ontology/descendants/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ontology",
								"descendants",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "GO:0005667"
								}
							]
						},
						"description": "Find all the terms descended from a given term. By default searches are conducted within the namespace of the given identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An ontology term identifier | \\- | GO:0005667  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| closest_term | Boolean | If true return only the closest terms to the specified term | \\- | \\- |\n| ontology | String | Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO | \\- | GO  <br> |\n| subset | String | Filter terms by the specified subset | \\- | goslim_generic  <br>goslim_metagenomics  <br> |\n| zero_distance | Boolean | Return terms with a distance of 0 | \\- | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ontology/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ontology/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ontology",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "GO:0005667"
								}
							]
						},
						"description": "Search for an ontological term by its namespaced identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An ontology term identifier | \\- | GO:0005667  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| relation | String | The types of relationships to include in the output. Fetches all relations by default | \\- | is_a  <br>part_of  <br> |\n| simple | Boolean | If set the API will avoid the fetching of parent and child terms | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ontology/name/:name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ontology/name/:name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ontology",
								"name",
								":name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "name",
									"value": "transcription factor complex"
								}
							]
						},
						"description": "Search for a list of ontological terms by their name\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| name | String | An ontology name. SQL wildcards are supported | \\- | transcription factor complex  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| ontology | String | Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO | \\- | GO  <br> |\n| relation | String | The types of relationships to include in the output. Fetches all relations by default | \\- | is_a  <br>part_of  <br> |\n| simple | Boolean | If set the API will avoid the fetching of parent and child terms | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET taxonomy/classification/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/taxonomy/classification/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"taxonomy",
								"classification",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "9606"
								}
							]
						},
						"description": "Return the taxonomic classification of a taxon node\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | A taxon identifier. Can be a NCBI taxon id or a name | \\- | 9606  <br>Homo sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET taxonomy/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/taxonomy/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"taxonomy",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "9606"
								}
							]
						},
						"description": "Search for a taxonomic term by its identifier or name\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | A taxon identifier. Can be a NCBI taxon id or a name | \\- | 9606  <br>Homo sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| simple | Boolean | If set the API will avoid the fetching of parent and child terms | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET taxonomy/name/:name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/taxonomy/name/:name?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"taxonomy",
								"name",
								":name"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "name",
									"value": "Homo%25"
								}
							]
						},
						"description": "Search for a taxonomic id by a non-scientific name\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| name | String | A non-scientific species name. Can include SQL wildcards | \\- | Homo%  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Overlap",
			"item": [
				{
					"name": "GET overlap/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/overlap/id/:id?feature=gene&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"overlap",
								"id",
								":id"
							],
							"query": [
								{
									"key": "feature",
									"value": "gene"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a region defined by the given identifier.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| feature | Enum(band, gene, transcript, cds, exon, repeat, simple, misc, variation, somatic_variation, structural_variation, somatic_structural_variation, constrained, regulatory, motif, chipseq, array_probe, mane) | The type of feature to retrieve. Multiple values are accepted. | none | \\- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000157764  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| biotype | String | The functional classification of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts. | \\- | protein_coding  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| logic_name | String | Limit retrieval of genes, transcripts and exons by a given name of an analysis. | \\- | \\- |\n| misc_set | String | Miscellaneous set which groups together feature entries. Consult the DB or returned data sets to discover what is available. | \\- | cloneset_30k  <br> |\n| object_type | String | Filter by feature type | \\- | gene  <br> |\n| so_term | String | Sequence Ontology term to narrow down the possible variants returned. | \\- | SO:0001650  <br> |\n| species | String | Species name/alias. | \\- | homo_sapiens  <br> |\n| species_set | String | Filter by species set for retrieving constrained elements. | mammals | \\- |\n| variant_set | String | Short name of a set to restrict the variants found. ([See list of short set names](http://www.ensembl.org/info/genome/variation/species/sets.html)) | \\- | ClinVar |"
					},
					"response": []
				},
				{
					"name": "GET overlap/region/:species/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/overlap/region/:species/:region?content-type=application/json&feature=gene&feature=transcript&feature=cds&feature=exon",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"overlap",
								"region",
								":species",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "feature",
									"value": "gene"
								},
								{
									"key": "feature",
									"value": "transcript"
								},
								{
									"key": "feature",
									"value": "cds"
								},
								{
									"key": "feature",
									"value": "exon"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "region",
									"value": "7:140424943-140624564"
								}
							]
						},
						"description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a given region.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| feature | Enum(band, gene, transcript, cds, exon, repeat, simple, misc, variation, somatic_variation, structural_variation, somatic_structural_variation, constrained, regulatory, motif, peak, other_regulatory, array_probe, mane) | The type of feature to retrieve. Multiple values are accepted. | none | \\- |\n| region | String | Query region. A maximum of 5Mb is allowed to be requested at any one time | \\- | X:1..1000:1  <br>X:1..1000:-1  <br>X:1..1000  <br> |\n| species | String | Species name/alias. | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| biotype | String | Functional classification of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts. | \\- | protein_coding  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Specify the database type to retrieve features from if not using the core database. We automatically choose the correct type of DB for variation, comparative and regulation features. | core | core  <br>otherfeatures  <br> |\n| logic_name | String | Limit retrieval of genes, transcripts and exons by the name of analysis. | \\- | \\- |\n| misc_set | String | Miscellaneous set which groups together feature entries. Consult the DB or returned data sets to discover what is available. | \\- | cloneset_30k  <br> |\n| so_term | String | Sequence Ontology term to restrict the variants found. Its descendants are also included in the search. | \\- | SO:0001650  <br> |\n| species_set | String | The species set name for retrieving constrained elements. | mammals | \\- |\n| trim_downstream | Boolean | Do not return features which overlap the downstream end of the region. | 0 | \\- |\n| trim_upstream | Boolean | Do not return features which overlap upstream end of the region. | 0 | \\- |\n| variant_set | String | Short name of a set to restrict the variants found. ([See list of short set names](https://www.ensembl.org/info/genome/variation/species/sets.html)) | \\- | ClinVar |"
					},
					"response": []
				},
				{
					"name": "GET overlap/translation/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/overlap/translation/:id?type=Superfamily&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"overlap",
								"translation",
								":id"
							],
							"query": [
								{
									"key": "type",
									"value": "Superfamily"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSP00000288602"
								}
							]
						},
						"description": "Retrieve features related to a specific Translation as described by its stable ID (e.g. domains, variants).\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSP00000288602  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| feature | Enum(transcript_variation, protein_feature, residue_overlap, translation_exon, somatic_transcript_variation) | Specify the type of features requested for the translation. | protein_feature | \\- |\n| so_term | String | Sequence Ontology term to restrict the variants found. Its descendants are also included in the search. | \\- | SO:0001650  <br> |\n| species | String | Species name/alias. | \\- | homo_sapiens  <br> |\n| type | String | Type of data to filter by. By default, all features are returned. Can specify a domain or consequence type. | none | low_complexity  <br> |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phenotype annotations",
			"item": [
				{
					"name": "GET /phenotype/accession/:species/:accession",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/phenotype/accession/:species/:accession?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"phenotype",
								"accession",
								":species",
								":accession"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "accession",
									"value": "EFO:0003900"
								}
							]
						},
						"description": "Return phenotype annotations for genomic features given a phenotype ontology accession\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| accession | String | phenotype ontology accession | \\- | EFO:0003900  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| include_children | Boolean(0,1) | Include annotations attached to child terms | 0 | \\- |\n| include_pubmed_id | Boolean(0,1) | Include the pubmed_ids | 0 | \\- |\n| include_review_status | Boolean(0,1) | Include the review_status information | 0 | \\- |\n| source | String | Restrict to annotations from a specific source. | undef | \\- |"
					},
					"response": []
				},
				{
					"name": "GET /phenotype/gene/:species/:gene",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/phenotype/gene/:species/:gene?include_associated=1&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"phenotype",
								"gene",
								":species",
								":gene"
							],
							"query": [
								{
									"key": "include_associated",
									"value": "1"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "gene",
									"value": "SAP30BP"
								}
							]
						},
						"description": "Return phenotype annotations for a given gene.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| gene | String | Query gene name or Ensembl stable ID. | \\- | ENSG00000157764  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| include_associated | Boolean(0,1) | Include phenotypes associated with variants reporting this gene. | 0 | \\- |\n| include_overlap | Boolean(0,1) | Include phenotypes of features overlapping the gene. | 0 | \\- |\n| include_pubmed_id | Boolean(0,1) | Include the pubmed_ids | 0 | \\- |\n| include_review_status | Boolean(0,1) | Include the review_status information | 0 | \\- |\n| include_submitter | Boolean(0,1) | Include the submitter names | 0 | \\- |\n| non_specified | Boolean(0,1) | Return non_specified phenotypes (records that did not provide a specific phenotype e.g. 'not provided') | 1 | \\- |\n| trait | Boolean(0,1) | Return phenotype/disease associations | 1 | \\- |\n| tumour | Boolean(0,1) | Return mutations observed in tumour samples and the tumour type | 1 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET /phenotype/region/:species/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/phenotype/region/:species/:region?content-type=application/json&feature_type=Variation",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"phenotype",
								"region",
								":species",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "feature_type",
									"value": "Variation"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "region",
									"value": "9:22125500-22136000"
								}
							]
						},
						"description": "Return phenotype annotations that overlap a given genomic region.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| region | String | Query region. A maximum of 5Mb is allowed to be requested at any one time | \\- | 9:22125500-22136000:1  <br>9:22125500-22136000:-1  <br>9:22125500-22136000  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| feature_type | String | Restrict to phenotype annotations from a specific feature type. | \\- | Variation  <br>StructuralVariation  <br>Gene  <br>QTL  <br> |\n| include_pubmed_id | Boolean(0,1) | Include the pubmed_ids | 0 | \\- |\n| include_review_status | Boolean(0,1) | Include the review_status information | 0 | \\- |\n| include_submitter | Boolean(0,1) | Include the submitter names | 0 | \\- |\n| non_specified | Boolean(0,1) | Return non_specified phenotypes (records that did not provide a specific phenotype e.g. 'not provided') | 1 | \\- |\n| only_phenotypes | Boolean(0,1) | Only returns associated phenotype description and mapped ontology accessions for a lighter output. | 0 | \\- |\n| trait | Boolean(0,1) | Return phenotype/disease associations | 1 | \\- |\n| tumour | Boolean(0,1) | Return mutations observed in tumour samples and the tumour type | 1 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET /phenotype/term/:species/:term",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/phenotype/term/:species/:term?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"phenotype",
								"term",
								":species",
								":term"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "term",
									"value": "coffee consumption"
								}
							]
						},
						"description": "Return phenotype annotations for genomic features given a phenotype ontology term\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n| term | String | phenotype ontology term | \\- | coffee consumption  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| include_children | Boolean(0,1) | Include annotations attached to child terms | 0 | \\- |\n| include_pubmed_id | Boolean(0,1) | Include the pubmed_ids | 0 | \\- |\n| include_review_status | Boolean(0,1) | Include the review_status information | 0 | \\- |\n| source | String | Restrict to annotations from a specific source. | undef | \\- |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Regulation",
			"item": [
				{
					"name": "GET regulatory/species/:species/microarray/:microarray/vendor/:vendor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/microarray/:microarray/vendor/:vendor?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"microarray",
								":microarray",
								"vendor",
								":vendor"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "microarray",
									"value": "HumanWG_6_V2"
								},
								{
									"key": "vendor",
									"value": "illumina"
								}
							]
						},
						"description": "Returns information about a specific microarray\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| microarray | String | Microarray name | \\- | HumanWG_6_V2  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n| vendor | String | Probe name | \\- | ILMN_1763508  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET regulatory/species/:species/epigenome",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/epigenome?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"epigenome"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "Returns information about all epigenomes available for the given species\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET species/:species/binding_matrix/:binding_matrix_stable_id/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/species/:species/binding_matrix/:binding_matrix_stable_id?unit=frequencies&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"species",
								":species",
								"binding_matrix",
								":binding_matrix_stable_id"
							],
							"query": [
								{
									"key": "unit",
									"value": "frequencies"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "binding_matrix_stable_id",
									"value": "ENSPFM0001"
								}
							]
						},
						"description": "Return the specified binding matrix\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| binding_matrix | String | Stable ID of binding matrix | \\- | ENSPFM0001  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| unit | String | Unit of the matrix elements | frequencies | frequencies, probabilities, bits |"
					},
					"response": []
				},
				{
					"name": "GET regulatory/species/:species/microarray",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/microarray?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"microarray"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								}
							]
						},
						"description": "Returns information about all microarrays available for the given species\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET regulatory/species/:species/microarray/:microarray/probe/:probe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/microarray/:microarray/probe/:probe?gene=1&transcript=1&content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"microarray",
								":microarray",
								"probe",
								":probe"
							],
							"query": [
								{
									"key": "gene",
									"value": "1"
								},
								{
									"key": "transcript",
									"value": "1"
								},
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "microarray",
									"value": "HumanWG_6_V2"
								},
								{
									"key": "probe",
									"value": "ILMN_1763508"
								}
							]
						},
						"description": "Returns information about a specific probe from a microarray\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| microarray | String | Microarray name | \\- | HumanWG_6_V2  <br> |\n| probe | String | Probe name | \\- | ILMN_1763508  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| gene | Boolean(0,1) | Has to be used in conjunction with transcript. Displays the associated gene | 0 | \\- |\n| transcripts | Boolean(0,1) | Displays the transcripts linked to this probe | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET regulatory/species/:species/microarray/:microarray/probe_set/:probe_set",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/microarray/:microarray/probe_set/:probe_set?content-type=application/json&gene=1&transcript=1",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"microarray",
								":microarray",
								"probe_set",
								":probe_set"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "gene",
									"value": "1"
								},
								{
									"key": "transcript",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "microarray",
									"value": "HG-U133_Plus_2"
								},
								{
									"key": "probe_set",
									"value": "202820_at"
								}
							]
						},
						"description": "Returns information about a specific probe_set from a microarray\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| microarray | String | Microarray name | \\- | HG-U133_Plus_2  <br> |\n| probe_set | String | ProbeSet name | \\- | 202820_at  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| gene | Boolean(0,1) | Has to be used in conjunction with transcript. Displays the associated gene | 0 | \\- |\n| transcripts | Boolean(0,1) | Displays the transcripts linked to this probe | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET regulatory/species/:species/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/regulatory/species/:species/id/:id?content-type=application/json&activity=1",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"regulatory",
								"species",
								":species",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "activity",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "id",
									"value": "ENSR00000082023"
								}
							]
						},
						"description": "Returns a RegulatoryFeature given its stable ID (e.g. ENSR00000082023)\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | RegulatoryFeature stable ID | \\- | ENSR00000082023  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| activity | Boolean(0,1) | Returns the activity of the Regulatory Feature in each Epigenome for the given species | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Sequence",
			"item": [
				{
					"name": "GET sequence/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/sequence/id/:id?content-type=text/plain",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"sequence",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "text/plain"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000157764"
								}
							]
						},
						"description": "Request multiple types of sequence by stable identifier. Supports feature masking and expand options.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | An Ensembl stable ID | \\- | ENSG00000157764  <br>ENSG00000157764.fasta (supported on some deployments)  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| end | Int | Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime. | \\- | 1000  <br> |\n| expand_3prime | Int | Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| expand_5prime | Int | Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| format | Enum(fasta) | Format of the data | \\- | fasta  <br> |\n| mask | Enum(hard,soft) | Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type. | \\- | hard  <br> |\n| mask_feature | Boolean | Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option | 0 | \\- |\n| multiple_sequences | Boolean | Allow the service to return more than 1 sequence per identifier. This is useful when querying for a gene but using a type such as protein. | 0 | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n| start | Int | Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime. | \\- | 1000  <br> |\n| type | Enum(genomic,cds,cdna,protein) | Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR. | genomic | cds |"
					},
					"response": []
				},
				{
					"name": "POST sequence/id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"ENSG00000157764\",\n        \"ENSG00000248378\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/sequence/id",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"sequence",
								"id"
							]
						},
						"description": "Request multiple types of sequence by a stable identifier list.\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| db_type | String | Restrict the search to a database other than the default. Useful if you need to use a DB other than core | \\- | core  <br> |\n| end | Int | Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime. | \\- | 1000  <br> |\n| expand_3prime | Int | Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| expand_5prime | Int | Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| format | Enum(fasta) | Format of the data | \\- | fasta  <br> |\n| mask | Enum(hard,soft) | Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type. | \\- | hard  <br> |\n| mask_feature | Boolean | Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option | 0 | \\- |\n| object_type | String | Filter by feature type | \\- | gene  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n| start | Int | Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime. | \\- | 1000  <br> |\n| type | Enum(genomic,cds,cdna,protein) | Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR. | genomic | cds  <br> |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"ids\": array } | { \"ids\" : \\[\"ENSG00000157764\", \"ENSG00000248378\" \\] } |"
					},
					"response": []
				},
				{
					"name": "GET sequence/region/:species/:region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/sequence/region/:species/:region?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"sequence",
								"region",
								":species",
								":region"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "region",
									"value": "X:1000000..1000100:1"
								}
							]
						},
						"description": "Returns the genomic sequence of the specified region of the given species. Supports feature masking and expand options.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| region | String | Query region. A maximum of 10Mb is allowed to be requested at any one time | \\- | X:1000000..1000100:1  <br>X:1000000..1000100:-1  <br>X:1000000..1000100  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| coord_system | String | Filter by coordinate system name | \\- | contig  <br>seqlevel  <br> |\n| coord_system_version | String | Filter by coordinate system version | \\- | GRCh37  <br> |\n| expand_3prime | Int | Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| expand_5prime | Int | Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| format | Enum(fasta) | Format of the data. | \\- | fasta  <br> |\n| mask | Enum(hard,soft) | Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lower cased characters. Only available when using genomic sequence type. | \\- | hard  <br> |\n| mask_feature | Boolean | Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option | 0 | 1 |"
					},
					"response": []
				},
				{
					"name": "POST sequence/region/:species",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"regions\": [\n        \"X:1000000..1000100:1\",\n        \"ABBA01004489.1:1..100\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/sequence/region/:species",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"sequence",
								"region",
								":species"
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								}
							]
						},
						"description": "Request multiple types of sequence by a list of regions.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| coord_system | String | Filter by coordinate system name | \\- | contig  <br>seqlevel  <br> |\n| coord_system_version | String | Filter by coordinate system version | \\- | GRCh37  <br> |\n| expand_3prime | Int | Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| expand_5prime | Int | Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type. | \\- | 1000  <br> |\n| format | Enum(fasta) | Format of the data. | \\- | fasta  <br> |\n| mask | Enum(hard,soft) | Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lower cased characters. Only available when using genomic sequence type. | \\- | hard  <br> |\n| mask_feature | Boolean | Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option | 0 | 1  <br> |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"regions\": array } | { \"regions\" : \\[\"X:1000000..1000100:1\", \"ABBA01004489.1:1..100\"\\] } |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Transcript Haplotypes",
			"item": [
				{
					"name": "GET transcript_haplotypes/:species/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/transcript_haplotypes/:species/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"transcript_haplotypes",
								":species",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "homo_sapiens"
								},
								{
									"key": "id",
									"value": "ENST00000288602"
								}
							]
						},
						"description": "Computes observed transcript haplotype sequences based on phased genotype data\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Transcript stable id | \\- | ENST00000288602  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| aligned_sequences | Boolean(0,1) | Include aligned sequences used to generate differences | 0 | 1  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| samples | Boolean(0,1) | Include sample-haplotype assignments | 0 | 1  <br> |\n| sequence | Boolean(0,1) | Include raw sequences | 0 | 1 |"
					},
					"response": []
				}
			]
		},
		{
			"name": "VEP",
			"item": [
				{
					"name": "GET vep/:species/hgvs/:hgvs_notation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/vep/:species/hgvs/:hgvs_notation?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								":species",
								"hgvs",
								":hgvs_notation"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "hgvs_notation",
									"value": "ENSP00000401091.1:p.Tyr124Cys"
								}
							]
						},
						"description": "Fetch variant consequences based on a HGVS notation\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| hgvs_notation | String | HGVS notation. May be genomic (g), coding (c) or protein (p), with reference to chromosome name, gene name, transcript ID or protein ID. | \\- | ENST00000366667:c.803C>T  <br>9:g.22125504G>C  <br>ENST00000003084:c.1431_1433delTTC  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| Conservation | Boolean | Retrieves a conservation score from the Ensembl Compara databases for variant positions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "POST vep/:species/hgvs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hgvs_notations\": [\n        \"ENST00000366667:c.803C>T\",\n        \"9:g.22125504G>C\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/vep/human/hgvs",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								"human",
								"hgvs"
							]
						},
						"description": "Fetch variant consequences for multiple HGVS notations\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"hgvs_notations\": array } | { \"hgvs_notations\" : \\[\"ENST00000366667:c.803C>T\", \"9:g.22125504G>C\" \\] } |"
					},
					"response": []
				},
				{
					"name": "GET vep/:species/id/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/vep/:species/id/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								":species",
								"id",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "id",
									"value": "rs56116432"
								}
							]
						},
						"description": "Fetch variant consequences based on a variant identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Query ID. Supports dbSNP, COSMIC and HGMD identifiers | \\- | rs56116432  <br>COSM476  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| Conservation | Boolean | Retrieves a conservation score from the Ensembl Compara databases for variant positions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "POST vep/:species/id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"rs56116432\",\n        \"COSM476\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/vep/human/id",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								"human",
								"id"
							]
						},
						"description": "Fetch variant consequences for multiple ids\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "GET vep/:species/region/:region/:allele/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/vep/:species/region/:region/:allele?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								":species",
								"region",
								":region",
								":allele"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "region",
									"value": "9:22125503-22125502:1"
								},
								{
									"key": "allele",
									"value": "C"
								}
							]
						},
						"description": "Fetch variant consequences\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| allele | String | Variation allele | \\- | C  <br>DUP  <br> |\n| region | String | Query region. We only support the current assembly | \\- | 9:22125503-22125502:1  <br>7:100318423-100321323:1  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| Conservation | Boolean | Retrieves a conservation score from the Ensembl Compara databases for variant positions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "POST vep/:species/region",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"variants\": [\n        \"21 26960070 rs116645811 G A . . .\",\n        \"21 26965148 rs1135638 G A . . .\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/vep/homo_sapiens/region",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"vep",
								"homo_sapiens",
								"region"
							]
						},
						"description": "Fetch variant consequences for multiple regions\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| Blosum62 | Boolean | Include BLOSUM62 amino acid conservation score ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)) | 0 | \\- |\n| CADD | Boolean | Include CADD (Combined Annotation Dependent Depletion) deleteriousness scores for single nucleotide variants. See [license](https://cadd.gs.washington.edu/). ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CADD.pm)) | 0 | \\- |\n| DisGeNET | Boolean | Retrieves Variant-Disease-PMID associations from the DisGeNET database ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/DisGeNET.pm)) | 0 | \\- |\n| GeneSplicer | Boolean | Detects splice sites in genomic DNA ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)) | 0 | \\- |\n| LoF | Boolean | LOFTEE identifies LoF (loss-of-function) variation. See [README](https://github.com/konradjk/loftee/blob/master/README.md) for more details. | 0 | \\- |\n| Mastermind | Boolean | Variants that have clinical evidence cited in the medical literature reported by [Mastermind Genomic Search Engine](https://www.genomenon.com/mastermind) ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Mastermind.pm)) | 0 | \\- |\n| MaxEntScan | Boolean | Sequence motif and maximum entropy based splice site consensus predictions ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)) | 0 | \\- |\n| Phenotypes | Boolean | Retrieves overlapping phenotype information ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Phenotypes.pm)) | 0 | \\- |\n| SpliceAI | Boolean | Retrieves pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceAI.pm)) | 0 | \\- |\n| SpliceRegion | Boolean | More granular predictions of splicing effects ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/SpliceRegion.pm)) | 0 | \\- |\n| appris | Boolean | Include APPRIS isoform annotation | 0 | \\- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| canonical | Boolean | Include a flag indicating the canonical transcript for a gene | 0 | \\- |\n| ccds | Boolean | Include CCDS transcript identifiers | 0 | \\- |\n| dbNSFP | String | Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See [dbNSFP README](https://drive.google.com/file/d/1Vse3b_qw_E46eDcsuLegF5HxpodAZ6Og/view) for field list. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)) | Not used | LRT_pred,MutationTaster_pred  <br> |\n| dbscSNV | Boolean | Predictions for splicing variants from dbscSNV. ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)) | 0 | \\- |\n| distance | Integer | Change the distance to transcript for which VEP assigns upstream and downstream consequences | 5000 | \\- |\n| domains | Boolean | Include names of overlapping protein domains | 0 | \\- |\n| failed | Boolean | When checking for co-located variants, by default variants flagged as failed by Ensembl's QC pipeline will be excluded. Set this flag to 1 to include such variants | 0 | \\- |\n| hgvs | Boolean | Include HGVS nomenclature based on Ensembl stable identifiers | 0 | \\- |\n| mane | Boolean | Include MANE Select annotations (GRCh38 only) | 0 | \\- |\n| merged | Boolean | Use merged Ensembl and RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| miRNA | Boolean | Determines where in the secondary structure of a miRNA a variant falls ([plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)) | 0 | \\- |\n| minimal | Boolean | Convert alleles to their most minimal representation before consequence calculation i.e. sequence that is identical between each pair of reference and alternate alleles is trimmed off from both ends, with coordinates adjusted accordingly. Note this may lead to discrepancies between input coordinates and coordinates reported by VEP relative to transcript sequences | 0 | \\- |\n| numbers | Boolean | Include affected exon and intron positions within the transcript | 0 | \\- |\n| protein | Boolean | Include Ensembl protein identifiers | 0 | \\- |\n| refseq | Boolean | Use RefSeq transcript set to report consequences (human only) | 0 | \\- |\n| shift_3prime | Boolean | Shift transcript-overlapping variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| shift_genomic | Boolean | Shift all variants as far as possible in the 3' direction before providing consequences | 0 | \\- |\n| transcript_id | String | Filter results by Transcript ID | Not Used | \\- |\n| transcript_version | Boolean | Add version numbers to Ensembl transcript identifiers | 0 | \\- |\n| tsl | Boolean | Include transcript support level (TSL) annotation | 0 | \\- |\n| uniprot | Boolean | Include best match accessions for translated protein products from three UniProt-related databases (SWISSPROT, TREMBL and UniParc) | 0 | \\- |\n| variant_class | Boolean | Output the Sequence Ontology variant class for the input variant | 0 | \\- |\n| vcf_string | Boolean | Include alleles in VCF format | 0 | \\- |\n| xref_refseq | Boolean | Include aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product | 0 | \\- |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Variation",
			"item": [
				{
					"name": "POST variation/:species/",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"rs56116432\",\n        \"COSM476\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/variation/homo_sapiens",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variation",
								"homo_sapiens"
							]
						},
						"description": "Uses a list of variant identifiers (e.g. rsID) to return the variation features including optional genotype, phenotype and population data\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias for the whole batch of symbols | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| genotypes | Boolean(0,1) | Include individual genotypes | 0 | \\- |\n| phenotypes | Boolean(0,1) | Include phenotypes | 0 | \\- |\n| pops | Boolean(0,1) | Include population allele frequencies | 0 | \\- |\n| population_genotypes | Boolean(0,1) | Include population genotype frequencies | 0 | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"ids\": array } | { \"ids\" : \\[\"rs56116432\", \"COSM476\" \\] } |"
					},
					"response": []
				},
				{
					"name": "GET variation/:species/pmid/:pmid",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/variation/:species/pmid/:pmid?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variation",
								":species",
								"pmid",
								":pmid"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "pmid",
									"value": "26318936"
								}
							]
						},
						"description": "Fetch variants by publication using PubMed reference number (PMID)\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| pmid | String | PubMed reference number (PMID) | \\- | 26318936  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET variation/:species/pmcid/:pmcid",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/variation/:species/pmcid/:pmcid?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variation",
								":species",
								"pmcid",
								":pmcid"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "pmcid",
									"value": "PMC5002951"
								}
							]
						},
						"description": "Fetch variants by publication using PubMed Central reference number (PMCID)\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| pmcid | String | PubMed Central reference number (PMCID) | \\- | PMC5002951  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET variation/:species/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/variation/:species/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variation",
								":species",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "id",
									"value": "rs56116432"
								}
							]
						},
						"description": "Uses a variant identifier (e.g. rsID) to return the variation features including optional genotype, phenotype and population data\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Variant id | \\- | rs56116432  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| genotypes | Boolean(0,1) | Include individual genotypes | 0 | \\- |\n| genotyping_chips | Boolean(0,1) | Include genotyping chips information | 0 | \\- |\n| phenotypes | Boolean(0,1) | Include phenotypes | 0 | \\- |\n| pops | Boolean(0,1) | Include population allele frequencies | 0 | \\- |\n| population_genotypes | Boolean(0,1) | Include population genotype frequencies | 0 | \\- |"
					},
					"response": []
				},
				{
					"name": "POST variant_recoder/:species",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"rs56116432\",\n        \"rs1042779\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/variant_recoder/homo_sapiens",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variant_recoder",
								"homo_sapiens"
							]
						},
						"description": "Translate a list of variant identifiers, HGVS notations or genomic SPDI notations to all possible variant IDs, HGVS and genomic SPDI\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| fields | String | Comma-separated list of identifiers/notations to include from the following types: id (variant ID), hgvsg (HGVS genomic), hgvsc (HGVS coding), hgvsp (HGVS protein), spdi (SPDI genomic) | id,hgvsg,hgvsc,hgvsp,spdi | \\- |\n| var_synonyms | Boolean(0,1) | Known variation synonyms and their sources | 0 | \\- |\n| vcf_string | Boolean(0,1) | VCF represented in a string | 0 | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"ids\": array } | { \"ids\" : \\[\"rs56116432\", \"rs1042779\" \\] } |"
					},
					"response": []
				},
				{
					"name": "GET variant_recoder/:species/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/variant_recoder/:species/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"variant_recoder",
								":species",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "species",
									"value": "human"
								},
								{
									"key": "id",
									"value": "rs56116432"
								}
							]
						},
						"description": "Translate a variant identifier, HGVS notation or genomic SPDI notation to all possible variant IDs, HGVS and genomic SPDI\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Variant ID, HGVS notation or genomic SPDI notation | \\- | rs56116432  <br>ENST00000366667:c.803C>T  <br>NC_000023.11:284252:C:G  <br> |\n| species | String | Species name/alias | \\- | homo_sapiens  <br>human  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| fields | String | Comma-separated list of identifiers/notations to include from the following types: id (variant ID), hgvsg (HGVS genomic), hgvsc (HGVS coding), hgvsp (HGVS protein), spdi (SPDI genomic) | id,hgvsg,hgvsc,hgvsp,spdi | \\- |\n| var_synonyms | Boolean(0,1) | Known variation synonyms and their sources | 0 | \\- |\n| vcf_string | Boolean(0,1) | VCF represented in a string | 0 | \\- |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Variation GA4GH",
			"item": [
				{
					"name": "GET ga4gh/beacon",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/beacon?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"beacon"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							]
						},
						"description": "Return Beacon information\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/beacon/query",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/beacon/query?referenceName=9&content-type=application/json&alternateBases=C&assemblyId=GRCh38&start=22125503&referenceBases=G",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"beacon",
								"query"
							],
							"query": [
								{
									"key": "referenceName",
									"value": "9"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "alternateBases",
									"value": "C"
								},
								{
									"key": "assemblyId",
									"value": "GRCh38"
								},
								{
									"key": "start",
									"value": "22125503"
								},
								{
									"key": "referenceBases",
									"value": "G"
								}
							]
						},
						"description": "Return the Beacon response for allele information\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| alternateBases | String | The bases that appear instead of the reference bases. Accepted values: see the ALT field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)) Note: either alternateBases or variantType is required. | \\- | C  <br> |\n| assemblyId | String | Assembly identifier (GRC notation, e.g. GRCh38). | \\- | GRCh38  <br> |\n| end | Int | Precise end position, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query precise structural variants. | \\- | __VAR(GA4GH_beacon_end)__  <br> |\n| endMax | Int | Maximum end coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_endmax)__  <br> |\n| endMin | Int | Minimum end coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_endmin)__  <br> |\n| referenceBases | String | Reference bases for this variant (starting from start). Accepted values: see the REF field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)). | \\- | G  <br> |\n| referenceName | String | Reference name (chromosome). Accepted values: 1-22, X, Y, MT. | \\- | 9  <br> |\n| start | Int | Precise start position, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: Do not use when querying for imprecise structural variants, use startMin and startMax instead. | \\- | 22125503  <br> |\n| startMax | Int | Maximum start coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_startmax)__  <br> |\n| startMin | Int | Minimum start coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_startmin)__  <br> |\n| variantType | String | Used to denote structural variants. Accepted values: DUP,DEL,INS,INV,CNV,DUP:TANDEM, see the ALT field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)) Note: either alternateBases or variantType is required. | \\- | __VAR(GA4GH_beacon_variantType)__  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| datasetIds | array of strings | Identifiers of datasets. Identifiers have to be chosen from 'Short name' column in the Variant sets list ([http://www.ensembl.org/info/genome/variation/species/sets.html](http://www.ensembl.org/info/genome/variation/species/sets.html)) | \\- | \\- |\n| includeDatasetResponses | String | Indicator of whether responses for individual datasets should be included. Accepted values: ALL, HIT, MISS, NONE. | NONE | \\- |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/beacon/query",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referenceName\": \"9\",\n    \"start\": 22125503,\n    \"referenceBases\": \"G\",\n    \"alternateBases\": \"C\",\n    \"assemblyId\": \"GRCh38\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/beacon/query",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"beacon",
								"query"
							]
						},
						"description": "Return the Beacon response for allele information\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| alternateBases | String | The bases that appear instead of the reference bases. Accepted values: see the ALT field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)) Note: either alternateBases or variantType is required. | \\- | C  <br> |\n| assemblyId | String | Assembly identifier (GRC notation, e.g. GRCh38). | \\- | GRCh38  <br> |\n| end | Int | Precise end position, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query precise structural variants. | \\- | __VAR(GA4GH_beacon_end)__  <br> |\n| endMax | Int | Maximum end coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_endmax)__  <br> |\n| endMin | Int | Minimum end coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_endmin)__  <br> |\n| referenceBases | String | Reference bases for this variant (starting from start). Accepted values: see the REF field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)). | \\- | G  <br> |\n| referenceName | String | Reference name (chromosome). Accepted values: 1-22, X, Y, MT. | \\- | 9  <br> |\n| start | Int | Precise start position, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: Do not use when querying for imprecise structural variants, use startMin | \\- | 22125503  <br> |\n| startMax | Int | Maximum start coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_startmax)__  <br> |\n| startMin | Int | Minimum start coordinate, allele locus (0-based). Accepted values: non-negative integers smaller than reference length. Note: only required when using variantType to query imprecise structural variants. | \\- | __VAR(GA4GH_beacon_startmin)__  <br> |\n| variantType | String | Used to denote structural variants. Accepted values: DUP,DEL,INS,INV,CNV,DUP:TANDEM, see the ALT field in VCF 4.2 specification ([http://samtools.github.io/hts-specs/VCFv4.2.pdf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)) Note: either alternateBases or variantType is required. | \\- | __VAR(GA4GH_beacon_variantType)__  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| datasetIds | array of strings | Identifiers of datasets. Identifiers have to be chosen from 'Short name' column in the Variant sets list ([http://www.ensembl.org/info/genome/variation/species/sets.html](http://www.ensembl.org/info/genome/variation/species/sets.html)) | \\- | \\- |\n| includeDatasetResponses | String | Indicator of whether responses for individual datasets should be included. Accepted values: ALL, HIT, MISS, NONE. | NONE | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/features/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/features/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"features",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "ENSG00000176515.1"
								}
							]
						},
						"description": "Return the GA4GH record for a specific sequence feature given its identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Feature id | \\- | ENST00000408937.7  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/features/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"parentId\": \"ENST00000408937.7\",\n    \"pageSize\": 2,\n    \"featureSetId\": \"\",\n    \"featureTypes\": [\n        \"cds\"\n    ],\n    \"start\": 197859,\n    \"end\": 220023,\n    \"referenceName\": \"X\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/features/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"features",
								"search"
							]
						},
						"description": "Return a list of sequence annotation features in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| end | Int | Return features within a window with this end location | \\- | 1109000  <br> |\n| referenceName | string | Return features on this reference | \\- | 6  <br> |\n| start | Int | Return features within a window with this start location | \\- | 1108000  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| featureTypes | array of strings | Return features of this type (requires SO terms) | \\- | \\[transcript\\]  <br> |\n| featuresetId | String | Return features in this set | \\- | Ensembl  <br> |\n| pageSize | Int | Number of features to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |\n| parentId | String | Return the child features of this feature | \\- | ENSG00000176515.1  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/callsets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"variantSetId\": 1,\n    \"pageSize\": 3,\n    \"name\": \"HG00099\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/callsets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"callsets",
								"search"
							]
						},
						"description": "Return a list of sets of genotype calls for specific samples in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| variantSetId | String | Return callSets for a specific variant set | \\- | 1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| name | String | Return callSets by name | \\- | NA19777  <br> |\n| pageSize | Int | Number of callSets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/callsets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/callsets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"callsets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1:NA19777"
								}
							]
						},
						"description": "Return the GA4GH record for a specific CallSet given its identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | CallSet id | \\- | 1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/datasets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageSize\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/datasets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"datasets",
								"search"
							]
						},
						"description": "Return a list of datasets in GA4GH format\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of dataSets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/datasets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/datasets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"datasets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "6e340c4d1e333c7a676b1710d2e3953c"
								}
							]
						},
						"description": "Return the GA4GH record for a specific dataset given its identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Dataset id | \\- | 6e340c4d1e333c7a676b1710d2e3953c  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/featuresets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"datasetId\": \"Ensembl\",\n    \"pageToken\": \"\",\n    \"pageSize\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/featuresets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"featuresets",
								"search"
							]
						},
						"description": "Return a list of feature sets in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| datasetId | String | Return featureSets by dataSet Identifier | \\- | Ensembl  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of featureSets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"datasetId\": string, \"pageToken\": string, \"pageSize\": long } | { \"datasetId\": \"Ensembl\", \"pageToken\": \"\", \"pageSize\": 2 } |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/featuresets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/featuresets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"featuresets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "Ensembl"
								}
							]
						},
						"description": "Return the GA4GH record for a specific featureSet given its identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | featureSet id | \\- | Ensembl  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/variants/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variants/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variants",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1:rs1333049"
								}
							]
						},
						"description": "Return the GA4GH record for a specific variant given its identifier.\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Variation id | \\- | 1:rs1333049  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/variantannotations/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageSize\": 2,\n    \"variantAnnotationSetId\": \"Ensembl\",\n    \"referenceName\": \"22\",\n    \"start\": 25000000,\n    \"end\": 25194457\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variantannotations/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variantannotations",
								"search"
							]
						},
						"description": "Return variant annotation information in GA4GH format for a region on a reference sequence\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| variantAnnotationSetId | String | Return variant annotations data for a specific annotationSet (Ensembl is an alias for the current default annotation set) | \\- | Ensembl  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| effects | \\[OntologyTerm\\] | Return variant annotation filtering on effects | \\- | \\[ {\"sourceName\":\"SO\", \"term\":\"missense_variant\", \"id\":\"SO:0001583\", \"sourceVersion\": \"\"}\\]  <br> |\n| end | Int | End position of region (zero-based, exclusive) | \\- | 25221500  <br> |\n| pageSize | Int | Number of variants to show per page | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |\n| referenceId | String | Reference sequence id | \\- | 9489ae7581e14efcad134f02afafe26c  <br> |\n| referenceName | String | Reference sequence name | \\- | 22  <br> |\n| start | Int | Start position of region (zero-based, inclusive) | \\- | 25221400 |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/variants/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"variantSetId\": 1,\n    \"callSetIds\": [\n        \"1:NA19777\",\n        \"1:HG01242\",\n        \"1:HG01142\"\n    ],\n    \"referenceName\": 22,\n    \"start\": 17190024,\n    \"end\": 17671934,\n    \"pageToken\": \"\",\n    \"pageSize\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variants/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variants",
								"search"
							]
						},
						"description": "Return variant call information in GA4GH format for a region on a reference sequence\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| end | Int | End position of region (zero-based, exclusive) | \\- | 25455087  <br> |\n| referenceName | String | Reference sequence name | \\- | 22  <br> |\n| start | Int | Start position of region (zero-based, inclusive) | \\- | 25455086  <br> |\n| variantSetId | String | Return variant data for specific variantSets | \\- | 1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callSetIds | String | Return variant data for specific callSets | \\- | \\[ 1:NA19777 \\]  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of variants to show per page | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/variantsets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"datasetId\": \"6e340c4d1e333c7a676b1710d2e3953c\",\n    \"pageToken\": \"\",\n    \"pageSize\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variantsets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variantsets",
								"search"
							]
						},
						"description": "Return a list of variant sets in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| datasetId | String | Return variantSets by dataSet Identifier | \\- | 6e340c4d1e333c7a676b1710d2e3953c  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of variantSets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |\n\n## Message\n\n| Content-type | Format | Example |\n| application/json | { \"datasetId\": string, \"pageToken\": string, \"pageSize\": long } | { \"datasetId\": \"6e340c4d1e333c7a676b1710d2e3953c\", \"pageToken\": \"\", \"pageSize\": 2 } |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/variantsets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variantsets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variantsets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Return the GA4GH record for a specific VariantSet given its identifier\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | VariantSet id | \\- | 1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/references/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referenceSetId\": \"GRCh38\",\n    \"pageSize\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/references/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"references",
								"search"
							]
						},
						"description": "Return a list of reference sequences in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| referenceSetId | string | Return references for a referenceSet | \\- | GRCh38  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| accession | string | Return reference information for a specific accession | \\- | NC_000021.9  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| md5checksum | string | Return reference information for the md5checksum of the sequence | \\- | 9489ae7581e14efcad134f02afafe26c  <br> |\n| pageSize | Int | Number of references to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/references/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/references/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"references",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "9489ae7581e14efcad134f02afafe26c"
								}
							]
						},
						"description": "Return data for a specific reference in GA4GH format by id\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Reference id | \\- | 9489ae7581e14efcad134f02afafe26c  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/referencesets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/referencesets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"referencesets",
								"search"
							]
						},
						"description": "Return a list of reference sets in GA4GH format\n\n## Parameters\n\n### Required\n\nNo required parameters\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| accession | String | Return referenceSet information for a specific accession | \\- | 1  <br> |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of referenceSets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/referencesets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/referencesets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"referencesets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "GRCh38"
								}
							]
						},
						"description": "Return data for a specific reference set in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | Reference set id | \\- | \\- |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				},
				{
					"name": "POST ga4gh/variantannotationsets/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"variantSetId\": \"Ensembl\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variantannotationsets/search",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variantannotationsets",
								"search"
							]
						},
						"description": "Return a list of annotation sets in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| variantSetId | String | Return variant annotation sets for a specific variant set | \\- | 1  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |\n| pageSize | Int | Number of variant annotation sets to return per request | 10 | \\- |\n| pageToken | Int | Identifier showing which page of data to retrieve next | null | \\- |"
					},
					"response": []
				},
				{
					"name": "GET ga4gh/variantannotationsets/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rest.ensembl.org/ga4gh/variantannotationsets/:id?content-type=application/json",
							"protocol": "https",
							"host": [
								"rest",
								"ensembl",
								"org"
							],
							"path": [
								"ga4gh",
								"variantannotationsets",
								":id"
							],
							"query": [
								{
									"key": "content-type",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "Ensembl"
								}
							]
						},
						"description": "Return meta data for a specific annotation set in GA4GH format\n\n## Parameters\n\n### Required\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| id | String | VariantAnnotation set id | \\- | Ensembl  <br> |\n\n### Optional\n\n| Name | Type | Description | Default | Example Values |\n| --- | --- | --- | --- | --- |\n| callback | String | Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see [the user guide](http://github.com/Ensembl/ensembl-rest/wiki). | \\- | randomlygeneratedname  <br> |"
					},
					"response": []
				}
			]
		}
	]
}